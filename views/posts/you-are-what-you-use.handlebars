<h3 class="ui center aligned header">&nbsp;</h3>

<div class="ui container text">
  <div class="ui relaxed divided items">
    <div class="item">
      <div class="content">
        <a class="header">You are what you use</a>
        <div class="meta">
          <a>August 19, 2016</a>
          <a>Business, Web development, DevOps</a>
        </div>
        <div class="description">
          One of the great things about technology is that is is really good at performing repetitive tasks (The Vim way). As a web developer, I often find myself on teams creating these tools as well as spend much of my day reading and researching these tools for my own work. Developers are seriously obsessed with productivity and reducing repetition. A general rule of thumb is if you are going to have to perform a task more than two or three times, that is a good notion to refactor the code or processes into a utility or tool you can use over and over. If this is such a case, why don’t we get exponential benefits in being more productive?
        </div>
        <a href="http://www.perf-tooling.today/" target="_blank" class="ui segment large image blog-image">
          <img src="/img/posts/hammer-to-the-alarm-clock.jpg" title="Hammer alarm clock" alt="Hammer alarm clock">
        </a>
        <div class="description">
          Having a productivity tool on your desk does NOT make you more productive the same way having a gym membership doesn’t make you in shape.
        </div>
        <div class="description">
          Tools are opportunities to use them. Our productivity is only equal to our best use of the tools. In my day to day dev life (and normal life), I find myself with a huge array of tools at my disposal but sometimes my habits, opinions and ego get in the way of making the best use of them. I find myself hitting the snooze on alarm clocks, using trello for static lists, or keeping messages in my inbox as reminders. These practices are wholly ineffective! More closely related to my work, I save lots of articles to never read later, download ‘cool’ utilities and plugins to fill up my extension tray, and am a weak vim user - having never invested the time to learn its full potential. In the same way Prefontaine said “To give anything less than your very best is to sacrifice the gift” - this can apply to the tools and skills we spend every workday supposedly sharpening. Good tools deserve our respect through proper use.
        </div>
        <div class="description">
          In the business world, we often succumb to the pressures of deadlines or demos and forgo learning to properly use tools or best practices. Spaghetti Code and highly dependent systems is evidence of this. This adds large amounts of technical weight and duplicate code (and work) to a project, as well as makes the project not only hard to maintain but fall behind the current technical standards (for which there is no excuse!). The barrier to entry for learning new skills is simply time and the barrier to entry for the best use of new tools is skill.
        </div>
        <div class="description">
          Instead of blindly racing ahead in a project with the habits and tools of today, compare the benefits of flexibility, maintainability and completeness with the sometimes overhyped advantages of being first. Using tools to their full potential is the act of constantly being in the valley between iteration and completed and deciding which hill to climb. I have often found it much more advantageous to invest in tools and skills that will translate into benefits far into the future. To do this, a project manager must set aside the necessary time to allow the breathing room for learning these skills and discovering the proper tools. A strategy for discipline is also necessary to keep the focus on the end result and not learn yourself out of productivity. With a focused goal in mind, it is easy to focus on the skills that matter most to do a project effectively and efficiently (eg with given scope and time constraints). One of the hardest parts of team management is circulating this philosophy.
        </div>
        <div class="description">
          Start with yourself - block out time everyday to learn or improve skills. Do periodic reviews of the tools you are using and ensure that it is to their fullest potential or look for better tools that perform tasks more completely. This is not just about the bigger programs and productivity tools (my favorites are trello, promodo timer, git, vim, and omnigraffle) but also about code tooling and project technologies. Is react the appropriate framework? Do we actually need a css framework? Can we use and contribute to an open source library that will perform this task better than us because they specialize? or is it worth our company creating a custom version? Asking these questions weekly will have the real impact of increasing productivity rather than the illusion of an alarm clock waking you up 45 minutes too early.
        </div>
        <br/>
        <hr/>
        <div class="extra">
          <span>Written By Scott Traver</span>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Call To Action -->
<div class="ui vertical stripe segment">
  <div class="ui text container">
    <div class="ui center aligned basic segment">
      <p>Are you using the most effective tools for your project?</p>
      <div class="ui green labeled icon button">
        <a class="js-email-event" href="mailto:scott@highpeaksolutions.com?Subject=Project" style="color:white;">Contact Me</a>
        <i class="mail outline icon"></i>
      </div>
    </div>
  </div>
</div>


