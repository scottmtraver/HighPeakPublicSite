<h3 class="ui center aligned header">&nbsp;</h3>

<div class="ui container text">
  <div class="ui relaxed divided items">
    <div class="item">
      <div class="content">
        <a class="header">Now vs Right</a>
        <div class="meta">
          <a>Sep 12, 2016</a>
          <a>Business, Web development, DevOps</a>
        </div>
        <div class="description">
Software development is all about push and pull. One of the biggest areas of struggle I have encountered is the push and pull between doing something quickly (Now) and properly designing and researching a features to do it the best known way (Right). This doesn’t mean we are perfect developers, or have to paralyze ourselves from releasing things but far too often the scale is encouraged by project managers in the direction of earlier and fix later over quality.
        </div>
        <a href="http://www.perf-tooling.today/" target="_blank" class="ui segment large image blog-image">
          <img src="/img/posts/tug-of-war.jpg" title="Tug of War" alt="Tug of War">
        </a>
        <div class="description">
Here are some reasons project managers chose Now over Right:
        </div>
        <div class="description">
          <ul>
            <li>Greed - there is a market created notion that being first trumps being best</li>
            <li>Respect / Pride / Ego - Being the first to bring something into existence commands respect and reputation</li>
            <li>Sense of mortality - time always applies a sense of urgency to projects, especially large ones, where the benefits already come long after the launch</li>
            <li>Belief in iteration - the startup mentality of fail faster is generally expressed in the failure aspect (number of iterations) in an effort to get a home run / unicorn ... at the expense of each and every attempt (which can be costly)</li>
          </ul>
        </div>
        <div class="description">
          There are consequences of this push and pull between makers and managers. Now is the project manager’s Sugar. It feeds their delight and encourages them to ramp the speed, sales, or feature creep because of how good it makes them feel in the moment. Demos are the ultimate plaything for sales reps, allowing them to bet on the future of the product at the expense of the development team. Ultimately, this leads to a destructive cycle that can only be course corrected via a much more strict diet of features and even perhaps feature fasting as the technical weight is trimmed away. Many products waste away as teams end up bug fixing and bailing the decent boat instead of having built the best possible one.
        </div>
        <div class="description">
          In search of how we ended up here in the first place, I have found several practices among development teams that encourages short term thinking over long term success.
        </div>
        <div class="description">
          <ul>
            <li>Building from a mock - many teams build a demo, then expand it to a fully featured product. This must be done under extreme scrutiny because oftentime the design requirements of the mock are so unrealistic they may not even integrate with reality</li>
            <li>User only stories - having strict policy on planning where every story must have a user facing or demonstrable component. Although nice in theory, this leaves zero room for infrastructure, code quality and invisible features - unless they are attached to a vaguely connected user story in which it bloats your planning and gives you unrealistic project management metrics</li>
            <li>Not letting tests block features - many managers don’t allow tests to block feature rollout but this has a disastrous side effect of utterly killing TDD. From the beginning if a team decides to use a practice such as test driven development, the very first slip allowing a feature released without tests can kill the whole paradigm and the reality is it may never get proper coverage further oiling the slippery slope to untested code</li>
            <li>Bug fixes that fix symptoms - managers often communicate business fear in the slightest unpleasantry experienced by customers equating it to the doom of the company. This exaggeration encourages releasing untested patches and fixes that do not address poor design, often the root cause of the bug in the first place</li>
            <li>Lack of design / feature kickoff meetings - many managers plan stories into sprints without proper clarity. In this situation devs often either waste everyone’s time asking questions to involved parties or worse, just start working and then end up trapped by their own work - and in an effort not to waste their code (developer pride) end up bug patching a feature they have just developed!</li>
          </ul>
        </div>
        <div class="description">
          How can the benefits of doing things right the first time be communicated up the chain in terms of value proposition which higher ups will listen and agree to?
        </div>
        <div class="description">
In my experience, this is one of the harder aspects of programming (communicating up the chain) and managing (listening down the chain of command). Both sides need to be open to understanding the ingrained priorities from the others position. Makers prioritize quality because their reputation depends on it. Managers prioritize business success (which often is a top down driven requirement of being / staying current … Now). These opposing forces can be met with healthy discussion if enough breathing room is given to the makers. I advocate underpromise and overdeliver.         
        </div>
        <div class="description">
          <strong>To Developers:</strong> Know that ego is the enemy. You may not get it right the first time so understand that validating a product or feature is extremely important early. Therefore plan for the future in the simplest manner possible without sacrificing possibility. This can easily be done by including design and documentation in your iterative process, it pays for itself tenfold.
        </div>
        <div class="description">
          <strong>To Managers:</strong> Know that communicated quality almost always trumps manufactured urgency. Take pride the the quality of the project at points of completion but don’t rush them. Set clear deliverables instead of deadlines and enforce them. Include design and documentation in your iterative process, it pays for itself tenfold.         
        </div>
        <br/>
        <hr/>
        <div class="extra">
          <span>Written By Scott Traver</span>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Call To Action -->
<div class="ui vertical stripe segment">
  <div class="ui text container">
    <div class="ui center aligned basic segment">
      <p>Stuck in project management hades?</p>
      <div class="ui green labeled icon button">
        <a class="js-email-event" href="mailto:scott@highpeaksolutions.com?Subject=Project" style="color:white;">Contact Me</a>
        <i class="mail outline icon"></i>
      </div>
    </div>
  </div>
</div>


